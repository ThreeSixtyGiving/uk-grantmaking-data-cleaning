# Generated by Django 5.0.6 on 2024-11-14 10:43

import django.db.models.functions.comparison
import django.db.models.lookups
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("ukgrantmaking", "0056_funder_successor"),
    ]

    operations = [
        migrations.RemoveField(
            model_name="funderyear",
            name="spending_grant_making",
        ),
        migrations.RemoveField(
            model_name="funderyear",
            name="checked",
        ),
        migrations.RenameField(
            model_name="funderyear",
            old_name="spending_grant_making_institutions_360Giving",
            new_name="spending_grant_making_institutions_unknown_360Giving",
        ),
        migrations.RenameField(
            model_name="funderyear",
            old_name="spending_grant_making_institutions_manual",
            new_name="spending_grant_making_institutions_unknown_manual",
        ),
        migrations.RenameField(
            model_name="funderyear",
            old_name="spending_grant_making_institutions_registered",
            new_name="spending_grant_making_institutions_unknown_registered",
        ),
        migrations.RemoveField(
            model_name="funderyear",
            name="spending_grant_making_institutions",
        ),
        migrations.AddField(
            model_name="funderyear",
            name="income_investment_manual",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="income_investment_registered",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_unknown",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "spending_grant_making_institutions_unknown_manual",
                    "spending_grant_making_institutions_unknown_registered",
                    "spending_grant_making_institutions_unknown_360Giving",
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_investment_manual",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_investment_registered",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="income_investment",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "income_investment_manual", "income_investment_registered"
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_investment",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "spending_investment_manual", "spending_investment_registered"
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_charitable_360Giving",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_charitable_manual",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_charitable_registered",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_noncharitable_360Giving",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_noncharitable_manual",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_noncharitable_registered",
            field=models.DecimalField(
                blank=True, decimal_places=2, max_digits=16, null=True
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_charitable",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "spending_grant_making_institutions_charitable_manual",
                    "spending_grant_making_institutions_charitable_registered",
                    "spending_grant_making_institutions_charitable_360Giving",
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions_noncharitable",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "spending_grant_making_institutions_noncharitable_manual",
                    "spending_grant_making_institutions_noncharitable_registered",
                    "spending_grant_making_institutions_noncharitable_360Giving",
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making_institutions",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.expressions.CombinedExpression(
                    django.db.models.expressions.CombinedExpression(
                        django.db.models.functions.comparison.Coalesce(
                            "spending_grant_making_institutions_unknown_manual",
                            "spending_grant_making_institutions_unknown_registered",
                            "spending_grant_making_institutions_unknown_360Giving",
                            0,
                        ),
                        "+",
                        django.db.models.functions.comparison.Coalesce(
                            "spending_grant_making_institutions_noncharitable_manual",
                            "spending_grant_making_institutions_noncharitable_registered",
                            "spending_grant_making_institutions_noncharitable_360Giving",
                            0,
                        ),
                    ),
                    "+",
                    django.db.models.functions.comparison.Coalesce(
                        "spending_grant_making_institutions_charitable_manual",
                        "spending_grant_making_institutions_charitable_registered",
                        "spending_grant_making_institutions_charitable_360Giving",
                        0,
                    ),
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="spending_grant_making",
            field=models.GeneratedField(
                db_persist=True,
                expression=models.Case(
                    models.When(
                        models.Q(
                            django.db.models.lookups.IsNull(
                                django.db.models.functions.comparison.Coalesce(
                                    "spending_grant_making_individuals_manual",
                                    "spending_grant_making_individuals_360Giving",
                                    "spending_grant_making_individuals_registered",
                                ),
                                False,
                            ),
                            django.db.models.lookups.IsNull(
                                django.db.models.expressions.CombinedExpression(
                                    django.db.models.expressions.CombinedExpression(
                                        django.db.models.functions.comparison.Coalesce(
                                            "spending_grant_making_institutions_unknown_manual",
                                            "spending_grant_making_institutions_unknown_registered",
                                            "spending_grant_making_institutions_unknown_360Giving",
                                            0,
                                        ),
                                        "+",
                                        django.db.models.functions.comparison.Coalesce(
                                            "spending_grant_making_institutions_noncharitable_manual",
                                            "spending_grant_making_institutions_noncharitable_registered",
                                            "spending_grant_making_institutions_noncharitable_360Giving",
                                            0,
                                        ),
                                        output_field=models.BigIntegerField(),
                                    ),
                                    "+",
                                    django.db.models.functions.comparison.Coalesce(
                                        "spending_grant_making_institutions_charitable_manual",
                                        "spending_grant_making_institutions_charitable_registered",
                                        "spending_grant_making_institutions_charitable_360Giving",
                                        0,
                                    ),
                                    output_field=models.BigIntegerField(),
                                ),
                                False,
                            ),
                            _connector="OR",
                        ),
                        then=django.db.models.expressions.CombinedExpression(
                            django.db.models.functions.comparison.Coalesce(
                                django.db.models.functions.comparison.Coalesce(
                                    "spending_grant_making_individuals_manual",
                                    "spending_grant_making_individuals_360Giving",
                                    "spending_grant_making_individuals_registered",
                                ),
                                0,
                            ),
                            "+",
                            django.db.models.functions.comparison.Coalesce(
                                django.db.models.expressions.CombinedExpression(
                                    django.db.models.expressions.CombinedExpression(
                                        django.db.models.functions.comparison.Coalesce(
                                            "spending_grant_making_institutions_unknown_manual",
                                            "spending_grant_making_institutions_unknown_registered",
                                            "spending_grant_making_institutions_unknown_360Giving",
                                            0,
                                        ),
                                        "+",
                                        django.db.models.functions.comparison.Coalesce(
                                            "spending_grant_making_institutions_noncharitable_manual",
                                            "spending_grant_making_institutions_noncharitable_registered",
                                            "spending_grant_making_institutions_noncharitable_360Giving",
                                            0,
                                        ),
                                        output_field=models.BigIntegerField(),
                                    ),
                                    "+",
                                    django.db.models.functions.comparison.Coalesce(
                                        "spending_grant_making_institutions_charitable_manual",
                                        "spending_grant_making_institutions_charitable_registered",
                                        "spending_grant_making_institutions_charitable_360Giving",
                                        0,
                                    ),
                                    output_field=models.BigIntegerField(),
                                ),
                                0,
                                output_field=models.BigIntegerField(),
                            ),
                            output_field=models.BigIntegerField(),
                        ),
                    )
                ),
                output_field=models.BigIntegerField(),
            ),
        ),
        migrations.AddField(
            model_name="funderyear",
            name="checked",
            field=models.GeneratedField(
                expression=models.Q(
                    django.db.models.lookups.IsNull(models.F("checked_by"), False),
                    django.db.models.lookups.IsNull(models.F("notes"), False),
                    django.db.models.lookups.IsNull(models.F("income_manual"), False),
                    django.db.models.lookups.IsNull(models.F("spending_manual"), False),
                    django.db.models.lookups.IsNull(
                        models.F("spending_charitable_manual"), False
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("spending_grant_making_individuals_manual"), False
                    ),
                    django.db.models.lookups.IsNull(
                        models.F(
                            "spending_grant_making_institutions_charitable_manual"
                        ),
                        False,
                    ),
                    django.db.models.lookups.IsNull(
                        models.F(
                            "spending_grant_making_institutions_noncharitable_manual"
                        ),
                        False,
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("spending_grant_making_institutions_unknown_manual"),
                        False,
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("total_net_assets_manual"), False
                    ),
                    django.db.models.lookups.IsNull(models.F("funds_manual"), False),
                    django.db.models.lookups.IsNull(
                        models.F("funds_endowment_manual"), False
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("funds_restricted_manual"), False
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("funds_unrestricted_manual"), False
                    ),
                    django.db.models.lookups.IsNull(
                        models.F("employees_manual"), False
                    ),
                    _connector="OR",
                ),
                output_field=models.BooleanField(),
                db_persist=True,
            ),
        ),
    ]
