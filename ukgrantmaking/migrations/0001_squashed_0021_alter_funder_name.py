# Generated by Django 5.0.4 on 2024-04-19 17:39

import django.db.models.deletion
import django.db.models.expressions
import django.db.models.functions.comparison
import django.db.models.functions.text
import django.db.models.lookups
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("ukgrantmaking", "0001_initial"),
        ("ukgrantmaking", "0002_alter_funder_segment"),
        ("ukgrantmaking", "0003_alter_funder_segment"),
        ("ukgrantmaking", "0004_alter_funder_charity_number"),
        ("ukgrantmaking", "0005_alter_funder_included_and_more"),
        ("ukgrantmaking", "0006_alter_funderyear_options_and_more"),
        (
            "ukgrantmaking",
            "0007_alter_funderyear_options_alter_funder_charity_number_and_more",
        ),
        ("ukgrantmaking", "0008_funder_latest_grantmaking_funderyear_financial_year"),
        ("ukgrantmaking", "0009_alter_funder_options_and_more"),
        ("ukgrantmaking", "0010_alter_funderyear_spending_grant_making"),
        ("ukgrantmaking", "0011_alter_funderyear_spending_grant_making"),
        ("ukgrantmaking", "0012_fundernote"),
        ("ukgrantmaking", "0013_funderyear_spending_grant_making_2"),
        ("ukgrantmaking", "0014_alter_funderyear_spending_grant_making"),
        ("ukgrantmaking", "0015_remove_funderyear_spending_grant_making_2"),
        ("ukgrantmaking", "0016_funder_latest_year"),
        ("ukgrantmaking", "0017_funder_org_id_schema"),
        ("ukgrantmaking", "0018_alter_funder_org_id_schema"),
        ("ukgrantmaking", "0019_alter_funder_org_id_schema"),
        ("ukgrantmaking", "0020_alter_funder_org_id_schema"),
        ("ukgrantmaking", "0021_alter_funder_name"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="FunderTag",
            fields=[
                (
                    "tag",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Funder",
            fields=[
                (
                    "org_id",
                    models.CharField(max_length=255, primary_key=True, serialize=False),
                ),
                (
                    "charity_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("name_registered", models.CharField(max_length=255)),
                (
                    "name_manual",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "segment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Donor Advised Fund", "Donor Advised Fund"),
                            ("Wellcome Trust", "Wellcome Trust"),
                            ("Charity", "Charity"),
                            ("Lottery Distributor", "Lottery Distributor"),
                            ("Arms Length Body", "Arms Length Body"),
                            ("Corporate Foundation", "Corporate Foundation"),
                            ("Family Foundation", "Family Foundation"),
                            ("Fundraising Grantmaker", "Fundraising Grantmaker"),
                            ("General grantmaker", "General grantmaker"),
                            ("Member/Trade Funded", "Member/Trade Funded"),
                            ("NHS/Hospital Foundation", "NHS/Hospital Foundation"),
                            (
                                "Government/Lottery Endowed",
                                "Government/Lottery Endowed",
                            ),
                            ("Small grantmaker", "Small grantmaker"),
                            ("Community Foundation", "Community Foundation"),
                            ("Local", "Local"),
                            ("Central", "Central"),
                            ("Devolved", "Devolved"),
                        ],
                        db_index=True,
                        default="General grantmaker",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("included", models.BooleanField(db_index=True, default=True)),
                (
                    "makes_grants_to_individuals",
                    models.BooleanField(db_index=True, default=False),
                ),
                ("date_of_registration", models.DateField(blank=True, null=True)),
                ("activities", models.TextField(blank=True, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                (
                    "name",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "name_manual", "name_registered"
                        ),
                        output_field=models.CharField(max_length=255),
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(blank=True, to="ukgrantmaking.fundertag"),
                ),
                (
                    "latest_grantmaking",
                    models.DecimalField(
                        blank=True,
                        db_index=True,
                        decimal_places=2,
                        max_digits=16,
                        null=True,
                    ),
                ),
            ],
            options={
                "ordering": ["-latest_grantmaking"],
            },
        ),
        migrations.CreateModel(
            name="FunderNote",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("note", models.TextField()),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                ("added_by", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "funder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notes",
                        to="ukgrantmaking.funder",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FunderYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("financial_year_end", models.DateField()),
                ("financial_year_start", models.DateField(blank=True, null=True)),
                (
                    "income_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "income_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "income",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "income_manual", "income_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "spending_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "spending_manual", "spending_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "spending_charitable_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_charitable_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_charitable",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "spending_charitable_manual",
                            "spending_charitable_registered",
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "spending_grant_making_individuals_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_grant_making_individuals_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_grant_making_individuals",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "spending_grant_making_individuals_manual",
                            "spending_grant_making_individuals_registered",
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "spending_grant_making_institutions_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_grant_making_institutions_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "spending_grant_making_institutions",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "spending_grant_making_institutions_manual",
                            "spending_grant_making_institutions_registered",
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "total_net_assets_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "total_net_assets_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "total_net_assets",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "total_net_assets_manual", "total_net_assets_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "funds_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "funds_manual", "funds_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "funds_endowment_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_endowment_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_endowment",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "funds_endowment_manual", "funds_endowment_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "funds_restricted_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_restricted_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_restricted",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "funds_restricted_manual", "funds_restricted_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                (
                    "funds_unrestricted_registered",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_unrestricted_manual",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=16, null=True
                    ),
                ),
                (
                    "funds_unrestricted",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "funds_unrestricted_manual", "funds_unrestricted_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                ("employees_registered", models.IntegerField(blank=True, null=True)),
                ("employees_manual", models.IntegerField(blank=True, null=True)),
                (
                    "employees",
                    models.GeneratedField(
                        db_persist=True,
                        expression=django.db.models.functions.comparison.Coalesce(
                            "employees_manual", "employees_registered"
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
                ("checked_on", models.DateTimeField(auto_now=True)),
                ("checked_by", models.CharField(blank=True, max_length=255, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                ("date_added", models.DateTimeField(auto_now_add=True)),
                ("date_updated", models.DateTimeField(auto_now=True)),
                (
                    "funder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="ukgrantmaking.funder",
                    ),
                ),
                (
                    "financial_year",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2029-30", "2029-30"),
                            ("2028-29", "2028-29"),
                            ("2027-28", "2027-28"),
                            ("2026-27", "2026-27"),
                            ("2025-26", "2025-26"),
                            ("2024-25", "2024-25"),
                            ("2023-24", "2023-24"),
                            ("2022-23", "2022-23"),
                            ("2021-22", "2021-22"),
                            ("2020-21", "2020-21"),
                            ("2019-20", "2019-20"),
                            ("2018-19", "2018-19"),
                            ("2017-18", "2017-18"),
                            ("2016-17", "2016-17"),
                            ("2015-16", "2015-16"),
                            ("2014-15", "2014-15"),
                            ("2013-14", "2013-14"),
                            ("2012-13", "2012-13"),
                            ("2011-12", "2011-12"),
                            ("2010-11", "2010-11"),
                            ("2009-10", "2009-10"),
                            ("2008-09", "2008-09"),
                            ("2007-08", "2007-08"),
                            ("2006-07", "2006-07"),
                            ("2005-06", "2005-06"),
                            ("2004-05", "2004-05"),
                            ("2003-04", "2003-04"),
                            ("2002-03", "2002-03"),
                            ("2001-02", "2001-02"),
                            ("2000-01", "2000-01"),
                        ],
                        db_index=True,
                        max_length=9,
                        null=True,
                    ),
                ),
                (
                    "spending_grant_making",
                    models.GeneratedField(
                        db_persist=True,
                        expression=models.Case(
                            models.When(
                                models.Q(
                                    django.db.models.lookups.IsNull(
                                        models.F("spending_grant_making_individuals"),
                                        False,
                                    ),
                                    django.db.models.lookups.IsNull(
                                        models.F("spending_grant_making_institutions"),
                                        False,
                                    ),
                                    _connector="OR",
                                ),
                                then=django.db.models.expressions.CombinedExpression(
                                    django.db.models.functions.comparison.Coalesce(
                                        models.F("spending_grant_making_individuals"), 0
                                    ),
                                    "+",
                                    django.db.models.functions.comparison.Coalesce(
                                        models.F("spending_grant_making_institutions"),
                                        0,
                                    ),
                                ),
                            )
                        ),
                        output_field=models.BigIntegerField(),
                    ),
                ),
            ],
            options={
                "ordering": ["funder", "-financial_year_end"],
                "unique_together": {("funder", "financial_year_end")},
            },
        ),
        migrations.AddField(
            model_name="funder",
            name="latest_year",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="funder_latest_year",
                to="ukgrantmaking.funderyear",
            ),
        ),
        migrations.AddField(
            model_name="funder",
            name="org_id_schema",
            field=models.GeneratedField(
                db_persist=True,
                expression=models.Case(
                    models.When(
                        models.Q(("org_id__startswith", "UKG-")),
                        then=models.Value("UKG"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "360G-")),
                        then=models.Value("UKG"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-CHC-")),
                        then=models.Value("GB-CHC"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-COH-")),
                        then=models.Value("GB-COH"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-SC-")),
                        then=models.Value("GB-SC"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-NIC-")),
                        then=models.Value("GB-NIC"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-LAE-")),
                        then=models.Value("GB-LAE"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-GOR-")),
                        then=models.Value("GB-GOR"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-SHPE-")),
                        then=models.Value("GB-SHPE"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-NHS-")),
                        then=models.Value("GB-NHS"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-LAS-")),
                        then=models.Value("GB-LAS"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-PLA-")),
                        then=models.Value("GB-PLA"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "GB-LANI-")),
                        then=models.Value("GB-LANI"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "US-EIN-")),
                        then=models.Value("US-EIN"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "XI-ROR-")),
                        then=models.Value("XI-ROR"),
                    ),
                    models.When(
                        models.Q(("org_id__startswith", "XI-PB-")),
                        then=models.Value("XI-PB"),
                    ),
                    default=django.db.models.functions.text.Left(
                        models.F("org_id"),
                        django.db.models.expressions.CombinedExpression(
                            django.db.models.functions.text.StrIndex(
                                models.F("org_id"), models.Value("-")
                            ),
                            "-",
                            models.Value(1),
                        ),
                    ),
                ),
                output_field=models.CharField(max_length=255),
            ),
        ),
        migrations.RemoveField(
            model_name="funder",
            name="name",
        ),
        migrations.AddField(
            model_name="funder",
            name="name",
            field=models.GeneratedField(
                db_persist=True,
                expression=django.db.models.functions.comparison.Coalesce(
                    "name_manual",
                    models.Case(
                        models.When(
                            name_registered__startswith="The ",
                            then=django.db.models.functions.text.Right(
                                models.F("name_registered"),
                                django.db.models.expressions.CombinedExpression(
                                    django.db.models.functions.text.Length(
                                        models.F("name_registered")
                                    ),
                                    "-",
                                    models.Value(4),
                                ),
                            ),
                        ),
                        default=models.F("name_registered"),
                    ),
                ),
                output_field=models.CharField(max_length=255),
            ),
        ),
    ]
