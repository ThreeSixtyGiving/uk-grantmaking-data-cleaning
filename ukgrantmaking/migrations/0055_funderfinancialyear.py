# Generated by Django 5.0.6 on 2024-11-12 12:24

import django.db.models.deletion
from django.db import migrations, models


def create_financial_years(apps, schema_editor):
    Funder = apps.get_model("ukgrantmaking", "Funder")
    FinancialYear = apps.get_model("ukgrantmaking", "FinancialYear")
    FunderFinancialYear = apps.get_model("ukgrantmaking", "FunderFinancialYear")

    financial_years = FinancialYear.objects.filter(status__in=["Open", "Closed"])

    for funder in Funder.objects.all():
        for financial_year in financial_years:
            funder_financial_year = FunderFinancialYear(
                funder=funder,
                financial_year=financial_year,
            )
            funder_financial_year.save()
            if financial_year.current:
                funder_financial_year.segment = funder.segment
                funder_financial_year.makes_grants_to_individuals = (
                    funder.makes_grants_to_individuals
                )
                funder_financial_year.tags.set(funder.tags.all())
                funder_financial_year.save()


class Migration(migrations.Migration):
    dependencies = [
        ("ukgrantmaking", "0054_remove_funder_tag_backup"),
    ]

    operations = [
        migrations.CreateModel(
            name="FunderFinancialYear",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "segment",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Donor Advised Fund", "Donor Advised Fund"),
                            ("Wellcome Trust", "Wellcome Trust"),
                            ("Charity", "Charity"),
                            ("Lottery Distributor", "Lottery Distributor"),
                            ("Arms Length Body", "Arms Length Body"),
                            ("Corporate Foundation", "Corporate Foundation"),
                            ("Family Foundation", "Family Foundation"),
                            ("Fundraising Grantmaker", "Fundraising Grantmaker"),
                            ("General grantmaker", "General grantmaker"),
                            ("Member/Trade Funded", "Member/Trade Funded"),
                            ("NHS/Hospital Foundation", "NHS/Hospital Foundation"),
                            (
                                "Government/Lottery Endowed",
                                "Government/Lottery Endowed",
                            ),
                            ("Small grantmaker", "Small grantmaker"),
                            ("Community Foundation", "Community Foundation"),
                            ("Local", "Local"),
                            ("Central", "Central"),
                            ("Devolved", "Devolved"),
                        ],
                        db_index=True,
                        default="General grantmaker",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("included", models.BooleanField(db_index=True, default=True)),
                (
                    "makes_grants_to_individuals",
                    models.BooleanField(db_index=True, default=False),
                ),
                (
                    "financial_year",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="funders",
                        to="ukgrantmaking.financialyear",
                    ),
                ),
                (
                    "funder",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financial_years",
                        to="ukgrantmaking.funder",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(blank=True, to="ukgrantmaking.fundertag"),
                ),
            ],
        ),
        migrations.RunPython(
            create_financial_years, reverse_code=migrations.RunPython.noop
        ),
    ]
